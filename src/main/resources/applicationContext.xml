<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">

	<!-- 自动搜索@Component , @Service , @Repository等标注的类 不搜索@Controller的类 -->
	<context:component-scan base-package="org.ukettle"
		annotation-config="true">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置DataSource数据源 -->
	<context:property-placeholder location="classpath:www.properties" />
	<bean id="dataSource" class="org.ukettle.basics.bone.BoneCPToDataSource"
		destroy-method="close">
		<property name="driverClass" value="${org.ukettle.jdbc.driverClass}" />
		<property name="jdbcUrl" value="${org.ukettle.jdbc.url}" />
		<property name="username" value="${org.ukettle.jdbc.username}" />
		<property name="password" value="${org.ukettle.jdbc.password}" />
		<property name="maxConnectionsPerPartition"
			value="${org.ukettle.jdbc.maxConnectionsPerPartition}" />
		<property name="minConnectionsPerPartition"
			value="${org.ukettle.jdbc.minConnectionsPerPartition}" />
		<property name="partitionCount" value="${org.ukettle.jdbc.partitionCount}" />
		<property name="acquireIncrement" value="${org.ukettle.jdbc.acquireIncrement}" />
		<property name="statementsCacheSize" value="${org.ukettle.jdbc.statementsCacheSize}" />
		<property name="releaseHelperThreads" value="${org.ukettle.jdbc.releaseHelperThreads}" />
	</bean>

	<!-- 配置事务管理器,这里的dataSource和SqlSessionFactoryBean的dataSource要一致，否则事物失效 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务的传播特性 -->
	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="*">readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- Spring 上下文信息 -->
	<bean id="springUtils" class="org.ukettle.www.toolkit.spring.SpringUtils" lazy-init="false" />

	<!-- mybatis sqlSessionFactory 注入datasource和配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath:org/ukettle/**/*.Mapper.xml" />
	</bean>

	<!-- 通过扫描的模式, 扫描目录在org.ukettle.**.mapper目录下, 所有继承Mapper接口者 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.ukettle.**.mapper" />
		<property name="markerInterface" value="org.ukettle.basics.base.mapper.Mapper" />
	</bean>

	<!--认证信息 -->
	<import resource="spring-shiro.xml" />
	<!--定时任务信息 -->
	<import resource="spring-quartz.xml" />

</beans>